//{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
//}

{
"Print to conaole":{
    "prefix": "cpp",    //在新建立的页面中输入cpp就会有智能提示，Tab就自动生成好了
    "body": [
        "#include <bits/stdc++.h>",
		"using namespace std;",
		"#define rep(i,a,n) for(int i = a; i< n; i++)",
		"#define per(i,a,n) for(int i=n-1; i>=a; i--)",
		"#define pb push_back",
		"#define mp make_pair",
		"#define all(x) (x).begin(), (x).end()",
		"#define fi first",
		"#define se second",
		"#define sz(x) ((int)(x).size())",
		"typedef vector<int> VI;",
		"typedef long long ll;",
		"typedef pair<int, int> PII;",
		"typedef double db;",
		"mt19937 mrand(random_device{}());",
		"const ll mod = 1000000007;",
		"int rnd(int x) {return mrand() % x;}",
		"ll mulmod(ll a, ll b) {ll res=0;a%=mod;assert(b>=0);for(;b;b>>=1){if(b&1)res+=a%mod;a+=a%mod;}return res;}",
		"ll powmod(ll a, ll b) {ll res=1;a%=mod;assert(b>=0);for(;b;b>>=1){if(b&1)res*=a%mod;a*=a%mod;}return res;}",
		"ll gcd(ll a, ll b) {return b?gcd(b,a%b):a;}",
		"//head",

		"",
		"",
        "int main(int argc, char const *argv[]){",   //main()函数
		"   //ios::sync_with_stdio(false);",
		"   //cin.tie(0);",
		"",
		"   $0",    //最终光标会在这里等待输入
        "   return 0;", //结束
        "}",
        "",
    ],
    "description": "A cpp file template."   //用户输入后智能提示的内容（你可以用中文写“生成C++模板”）
}
}